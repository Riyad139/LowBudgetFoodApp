{"mappings":"AAAA,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAS;AAExD,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IAC5B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,EAAE,MAAM,EAAE,CAAC;QACvC,UAAU,CAAC,QAAQ,GAAI,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC,OAAO;QACpE,CAAC,EAAE,CAAC,GAAG,IAAI;IACb,CAAC;AACH,CAAC;AAED,EAAuC,AAAvC,qCAAuC;AAEvC,EAAuC,AAAvC,qCAAuC;AAEvC,KAAK,CAAC,SAAS,oBAAsB,CAAC;IACpC,GAAG,CAAC,CAAC;QACH,EAA0B,AAA1B,wBAA0B;QAC1B,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CACrB,CAA2E;QAE7E,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI;QAC3B,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM;QAC1D,GAAG,CAAC,CAAC,CAAC,MAAM,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI;QAC1B,OAAO,CAAC,IAAI,CAAC,IAAI;QACjB,MAAM,GAAG,CAAC;YACR,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,QAAQ,EAAE,MAAM,CAAC,QAAQ;QAC3B,CAAC;QACD,OAAO,CAAC,IAAI,CAAC,MAAM;QACnB,EAAqC,AAArC,mCAAqC;QAErC,KAAK,CAAC,IAAI,IAAI;cACJ,EAAE,MAAM,CAAC,KAAK,CAAC;;YAEjB,EAAE,MAAM,CAAC,KAAK,CAAC;;;;;;;;;iEASsC,EACzD,MAAM,CAAC,WAAW,CACnB;;;;;;;gEAOyD,EACxD,MAAM,CAAC,QAAQ,CAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCH,EAAE,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,GAAK,CAAC;YACjC,MAAM,EAAE;;;;iCAImB,EAAE,GAAG,CAAC,QAAQ,CAAC;;gCAEhB,EAAE,GAAG,CAAC,IAAI,CAAC;KACtC,EAAE,GAAG,CAAC,WAAW,CAAC;;OAEhB;QACH,CAAC,EAAE,IAAI,CAAC,CAAE,GAAE;;;;;;;;sCAQsB,EAC9B,MAAM,CAAC,SAAS,CACjB;;;;;YAKK,EAAE,MAAM,CAAC,UAAU,CAAC;;;;;;;;QAQxB;QACJ,eAAe,CAAC,SAAS,GAAG,CAAE;QAC9B,eAAe,CAAC,kBAAkB,CAAC,CAAY,aAAE,IAAI;IACvD,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,GAAG;QACf,KAAK,CAAC,GAAG;IACX,CAAC;AACH,CAAC","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector(\".recipe\");\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\nconst getRecipe = (async function () {\n  try {\n    /// fetching data from api\n    const res = await fetch(\n      \"https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bcac4\"\n    );\n    const data = await res.json();\n    if (!res.ok) throw new Error(`${data.message} ${res.status}`);\n    let { recipe } = data.data;\n    console.info(data);\n    recipe = {\n      title: recipe.title,\n      cookingTime: recipe.cooking_time,\n      id: recipe.id,\n      image: recipe.image_url,\n      ingredients: recipe.ingredients,\n      servings: recipe.servings,\n    };\n    console.info(recipe);\n    //// randaring recipe to the web site\n\n    const item = `<figure class=\"recipe__fig\">\n    <img src=\"${recipe.image}\" alt=\"Tomato\" class=\"recipe__img\" />\n    <h1 class=\"recipe__title\">\n      <span>${recipe.title}</span>\n    </h1>\n  </figure>\n\n  <div class=\"recipe__details\">\n    <div class=\"recipe__info\">\n      <svg class=\"recipe__info-icon\">\n        <use href=\"src/img/icons.svg#icon-clock\"></use>\n      </svg>\n      <span class=\"recipe__info-data recipe__info-data--minutes\">${\n        recipe.cookingTime\n      }</span>\n      <span class=\"recipe__info-text\">minutes</span>\n    </div>\n    <div class=\"recipe__info\">\n      <svg class=\"recipe__info-icon\">\n        <use href=\"src/img/icons.svg#icon-users\"></use>\n      </svg>\n      <span class=\"recipe__info-data recipe__info-data--people\">${\n        recipe.servings\n      }</span>\n      <span class=\"recipe__info-text\">servings</span>\n\n      <div class=\"recipe__info-buttons\">\n        <button class=\"btn--tiny btn--increase-servings\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n          </svg>\n        </button>\n        <button class=\"btn--tiny btn--increase-servings\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n          </svg>\n        </button>\n      </div>\n    </div>\n\n    <div class=\"recipe__user-generated\">\n      <svg>\n        <use href=\"src/img/icons.svg#icon-user\"></use>\n      </svg>\n    </div>\n    <button class=\"btn--round\">\n      <svg class=\"\">\n        <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n      </svg>\n    </button>\n  </div>\n\n  <div class=\"recipe__ingredients\">\n    <h2 class=\"heading--2\">Recipe ingredients</h2>\n    <ul class=\"recipe__ingredient-list\">\n      \n    ${recipe.ingredients.map((ing) => {\n      return ` <li class=\"recipe__ingredient\">\n   <svg class=\"recipe__icon\">\n     <use href=\"src/img/icons.svg#icon-check\"></use>\n   </svg>\n   <div class=\"recipe__quantity\">${ing.quantity}</div>\n   <div class=\"recipe__description\">\n     <span class=\"recipe__unit\">${ing.unit}</span>\n     ${ing.description}\n   </div>\n </li> `;\n    }).join(\"\")}\n    </ul>\n  </div>\n\n  <div class=\"recipe__directions\">\n    <h2 class=\"heading--2\">How to cook it</h2>\n    <p class=\"recipe__directions-text\">\n      This recipe was carefully designed and tested by\n      <span class=\"recipe__publisher\">${\n        recipe.publisher\n      }</span>. Please check out\n      directions at their website.\n    </p>\n    <a\n      class=\"btn--small recipe__btn\"\n      href=\"${recipe.source_url}\"\n      target=\"_blank\"\n    >\n      <span>Directions</span>\n      <svg class=\"search__icon\">\n        <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n      </svg>\n    </a>\n  </div>`;\n    recipeContainer.innerHTML = '';\n    recipeContainer.insertAdjacentHTML(\"afterbegin\", item);\n  } catch (err) {\n    console.log(err);\n    alert(err);\n  }\n})();\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}